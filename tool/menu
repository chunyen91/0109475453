#!/bin/bash
clear

myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;

flag=0

echo

function create_user() {
#myip=`dig +short myip.opendns.com @resolver1.opendns.com`
clear
echo -e ""| lolcat
echo -e ""| lolcat
echo -e ""| lolcat
echo -e ""| lolcat
useradd -e `date -d "$masaaktif days" +"%Y-%m-%d"` -s /bin/false -M $uname
exp="$(chage -l $uname | grep "Account expires" | awk -F": " '{print $2}')"
echo -e "$pass\n$pass\n"|passwd $uname &> /dev/null
echo -e ""| lolcat
echo -e "|      Informasi Akun Baru SSH      |" | boxes -d dog | lolcat
echo -e "============-MuLuu09-============" | lolcat
echo -e "     Host: $myip" | lolcat
echo -e "     Username: $uname" | lolcat
echo -e "     Password: $pass                     " | lolcat
echo -e "     Port default dropbear: 443          " | lolcat
echo -e "     Port default openSSH : 22           " | lolcat
echo -e "     Port default squid   : 8080         " | lolcat
echo -e "     Port default openVPN : 55           " | lolcat
echo -e "     Auto kill user maximal login 2      " | lolcat
echo -e "-----------------------------------------" | lolcat
echo -e "     Aktif Sampai: $exp                  " | lolcat
echo -e "=========================================" | lolcat
echo -e "   DI LARANG:                            " | lolcat
echo -e "   HACKING-DDOS-PHISING-SPAM-TORENT      " | lolcat
echo -e "   MuLuu09   MappakkoE.               " | lolcat
echo -e "=========================================" | lolcat
echo -e "   Script by MuLuu09             " | lolcat
myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;
echo -e "   Config OVPN:                          " | lolcat
echo -e "   http://$myip:81/1194-client.ovpn      " | lolcat
echo -e "-----------------------------------------" | lolcat
echo -e ""
echo -e ""
}
function renew_user() {
	echo "Kadaluarsa User: $uname Di Perbarui Sampai: $expdate"| lolcat;
	usermod -e $expdate $uname
}

function delete_user(){
	userdel $uname
}

function expired_users(){
echo "                      _\|/_      "| lolcat
echo "                      (o o)      "| lolcat
echo "-------------------o00-{_}-00o---"| lolcat
echo "BIL  USERNAME          EXPIRED "| lolcat
echo "---------------------------------"| lolcat
count=1
	cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
	totalaccounts=`cat /tmp/expirelist.txt | wc -l`
	for((i=1; i<=$totalaccounts; i++ )); do
	tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
		username=`echo $tuserval | cut -f1 -d:`
		userexp=`echo $tuserval | cut -f2 -d:`
		userexpireinseconds=$(( $userexp * 86400 ))
		todaystime=`date +%s`
		expired="$(chage -l $username | grep "Account expires" | awk -F": " '{print $2}')"
		if [ $userexpireinseconds -lt $todaystime ] ; then
			printf "%-4s %-15s %-10s %-3s\n" "$count." "$username" "$expired"
			count=$((count+1))
		fi
	done
	rm /tmp/expirelist.txt
}

function not_expired_users(){
    cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
    totalaccounts=`cat /tmp/expirelist.txt | wc -l`
    for((i=1; i<=$totalaccounts; i++ )); do
        tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
        username=`echo $tuserval | cut -f1 -d:`
        userexp=`echo $tuserval | cut -f2 -d:`
        userexpireinseconds=$(( $userexp * 86400 ))
        todaystime=`date +%s`
        if [ $userexpireinseconds -gt $todaystime ] ; then
            echo $username
        fi
    done
	rm /tmp/expirelist.txt
}

function monssh2(){
echo ""| lolcat
echo "|   Tgl-Jam    | PID   |   User Name  |      Dari IP      |"| boxes -d peek | lolcat
echo "-------------------------------------------------------------"| lolcat
data=( `ps aux | grep -i dropbear | awk '{print $2}'`);

echo "=================[ Checking Dropbear login ]================="| lolcat
echo "-------------------------------------------------------------"| lolcat
for PID in "${data[@]}"
do
	#echo "check $PID";
	NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
	USER=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $10}'`;
	IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $12}'`;
	waktu=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $1,$2,$3}'`;
	if [ $NUM -eq 1 ]; then
		echo "$waktu - $PID - $USER - $IP"| lolcat;
	fi
done


echo "-------------------------------------------------------------"| lolcat
data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);

echo "==================[ Checking OpenSSH login ]================="| lolcat
echo "-------------------------------------------------------------"| lolcat
for PID in "${data[@]}"
do
        #echo "check $PID";
		NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
		USER=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
		IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
		waktu=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $1,$2,$3}'`;
        if [ $NUM -eq 1 ]; then
                echo "$waktu - $PID - $USER - $IP"| lolcat;
        fi
done

echo "-------------------------------------------------------------"| lolcat
echo -e "==============[ User Monitor Dropbear & OpenSSH]============="| lolcat
}

function used_data(){
	myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`
	myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`
	ifconfig $myint | grep "RX bytes" | sed -e 's/ *RX [a-z:0-9]*/Received: /g' | sed -e 's/TX [a-z:0-9]*/\nTransfered: /g'
}

function bench-network2(){
wget freevps.us/downloads/bench.sh -O - -o /dev/null|bash
echo -e "Sekian...!!!"| lolcat
}

function user-list(){
echo "--------------------------------------------------"| lolcat
echo "BIL  USERNAME        STATUS       EXP DATE   "| lolcat
echo "--------------------------------------------------"| lolcat
C=1
ON=0
OFF=0
while read mumetndase
do
        USER="$(echo $mumetndase | cut -d: -f1)"
        ID="$(echo $mumetndase | grep -v nobody | cut -d: -f3)"
        EXP="$(chage -l $USER | grep "Account expires" | awk -F": " '{print $2}')"
        ONLINE="$(cat /etc/openvpn/log.log | grep -Eom 1 $USER | grep -Eom 1 $USER)"
        if [[ $ID -ge 500 ]]; then
        if [[ -z $ONLINE ]]; then
        printf "%-4s %-15s %-10s %-3s\n" "$C." "$USER" "OFFLINE" "$EXP"
        OFF=$((OFF+1))
        else
        printf "%-4s %-15s %-10s %-3s\n" "$C." "$USER" "ONLINE" "$EXP"
        ON=$((ON+1))
        fi
        C=$((C+1))
        fi
JUMLAH="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
done < /etc/passwd
echo "--------------------------------------------------"| lolcat
echo " OFFLINE : $OFF     ONLINE : $ON     TOTAL USER : $JUMLAH "| lolcat
echo "--------------------------------------------------"| lolcat
}

function lokasi(){

data=( `ps aux | grep -i dropbear | awk '{print $2}'`);

echo "User Login" | boxes -d peek | lolcat;
echo "=================================";
echo "Dropbear" | lolcat
for PID in "${data[@]}"
do
    #echo "check $PID";
    NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
    USER=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $10}'`;
    IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $12}'`;
    if [ $NUM -eq 1 ]; then
        echo "$USER - $IP";
    fi
done
echo ""
echo "OpenSSH" | lolcat;

data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);


for PID in "${data[@]}"
do
        #echo "check $PID";
        NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
        USER=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
        IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
        if [ $NUM -eq 1 ]; then
                echo "$USER - $IP";
        fi
done
echo "-------------------------------" | lolcat
}



clear
echo ""
echo ""
echo ""
echo "" | lolcat
echo "" | lolcat
echo "" | lolcat
echo "" | lolcat
echo "        ----[SELAMAT DATANG DI VPS MappakkoE  - ]---"| boxes -d dog | lolcat
echo "        ====================================================="| lolcat
echo "        #           WhatsApp     : +601131731782            #"| lolcat
echo "        #           Telegram     : @MuLuu09                 #"| lolcat
echo "        #           Facebook     : fb.com/mhd.Fazren        #"| lolcat
echo "        #           InstaGram    : mhdfazren_               #"| lolcat
echo "        #                                                   #"| lolcat
echo "        #         Copyright: © MuLuu09™ Premium 2017        #"| lolcat
echo "        ====================================================="| lolcat
echo ""
PS3='Silahkan ketik nomor pilihan anda lalu tekan ENTER: '
options=("Buat User" "Buat User Trial" "Perbarui User" "Semua User" "Hapus User" "Monitor User Login" "Aktifkan Kill Multi Login" "Matikan Kill Multi Login" "User Belum Kadaluarsa" "User Sudah Kadaluarsa" "Restart Server" "Ganti Password User" "Ganti Password VPS" "Used Data By Users" "bench-network" "Ram Status" "Bersihkan cache ram" "Ganti Port OpenVPN" "Ganti Port Dropbear" "Ganti Port Openssh" "Ganti Port Squid3" "Speedtest" "Edit Banner Login" "Lihat Lokasi User" "install openVPV" install OCSpanel" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Buat User")
       read -p "Enter username: " uname
       read -p "Enter password: " pass
       read -p "Kadaluarsa (Berapa Hari): " masaaktif
       clear
       create_user
	    break
            ;;
	"Buat User Trial")
	uname=trial-`</dev/urandom tr -dc 0-9 | head -c1`
	masaaktif="1"
	pass=`</dev/urandom tr -dc 0-9 | head -c5`
	clear
	create_user
	break
	;;
        "Perbarui User")
            read -p "Enter username yg di perbarui: " uname
            read -p "Aktif sampai tanggal Thn-Bln-Hr(YYYY-MM-DD): " expdate
            renew_user | boxes -d dog | lolcat
            break
            ;;
	 "Semua User")
	    user-list
	    break
	    ;;
        "Hapus User")
	    user-list
	    echo ""
            read -p "Ketik user (di atas) yang akan di hapus: " uname 
	    echo -e "User $uname sukses dihapus boss!!!" | boxes -d boy | lolcat
            delete_user
	    break
            ;;
	  "Monitor User Login")
	  monssh2
	  break
	  ;;
	    "Aktifkan Kill Multi Login")
	   #echo "@reboot root /root/userlimit.sh" > /etc/cron.d/userlimitreboot
	   echo "* * * * * root ./userlimit.sh 2" > /etc/cron.d/userlimit1
	   echo "* * * * * root sleep 10; ./userlimit.sh 2" > /etc/cron.d/userlimit2
           echo "* * * * * root sleep 20; ./userlimit.sh 2" > /etc/cron.d/userlimit3
           echo "* * * * * root sleep 30; ./userlimit.sh 2" > /etc/cron.d/userlimit4
           echo "* * * * * root sleep 40; ./userlimit.sh 2" > /etc/cron.d/userlimit5
           echo "* * * * * root sleep 50; ./userlimit.sh 2" > /etc/cron.d/userlimit6
	   e#cho "@reboot root /root/userlimitssh.sh" >> /etc/cron.d/userlimitreboot
	   echo "* * * * * root ./userlimitssh.sh 2" >> /etc/cron.d/userlimit1
	   echo "* * * * * root sleep 11; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit2
           echo "* * * * * root sleep 21; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit3
           echo "* * * * * root sleep 31; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit4
           echo "* * * * * root sleep 41; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit5
           echo "* * * * * root sleep 51; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit6
	    service cron restart
	    service ssh restart
	    service dropbear restart
	    echo "------------+ AUTO KILL SUDAH DI AKTIFKAN BOSS +--------------" | lolcat
	    
	echo "Dasar pelit!!! user anda marah2 jangan salahkan saya ya boss
	nanti jangan lupa di matikan boss" | boxes -d boy | lolcat
		break
		;;
	"Matikan Kill Multi Login")
	rm -rf /etc/cron.d/userlimit1
	rm -rf /etc/cron.d/userlimit2
	rm -rf /etc/cron.d/userlimit3
	rm -rf /etc/cron.d/userlimit4
	rm -rf /etc/cron.d/userlimit5
	rm -rf /etc/cron.d/userlimit6
	rm -rf /etc/cron.d/userlimitreboot
	service cron restart
	    service ssh restart
	    service dropbear restart
	echo "AUTO KILL LOGIN,SUDAH SAYA MATIKAN BOS!!!" | boxes -d boy | lolcat
	break
	;;
		"User Belum Kadaluarsa")
			not_expired_users | boxes -d dog | lolcat
			break
			;;
		"User Sudah Kadaluarsa")
			expired_users | boxes -d dog | lolcat
			break
			;;		
		"Restart Server")
			reboot
			break
			;;
		"Ganti Password User")
		read -p "Ketik user yang akan di ganti passwordnya: " uname
		read -p "Silahkan isi passwordnya: " pass
		echo "$uname:$pass" | chpasswd
		echo "Mantaffff boss!!! Password $uname user anda sudah di ganti..."| boxes -d peek | lolcat
		break
		;;
		"Ganti Password VPS")
		read -p "Silahkan isi password baru untuk VPS anda: " pass	
		echo "root:$pass" | chpasswd
		echo "Ciieeee.. ciieeeeeee.. abis ganti password VPS ni yeeee...!!!"| boxes -d boy | lolcat
			break
			;;
		"Used Data By Users")
			used_data | boxes -d boy | lolcat
 			break
			;;
		"bench-network")
			bench-network2 | lolcat
			break
			;;
		"Ram Status")
			free -h | grep -v + > /tmp/ramcache
			cat /tmp/ramcache | grep -v "Swap"
			break
			;;
		"Bersihkan cache ram")
	                echo 3 > /proc/sys/vm/drop_caches && swapoff -a && swapon -a
			echo "SUKSES..!!!Cache ram anda sudah di bersihkan." | boxes -d spring | lolcat
		        break
			;;
		"Ganti Port OpenVPN")	
            echo "Silahkan ganti port OpenVPN anda lalu klik enter?"| boxes -d peek | lolcat
            read -p "Port: " -e -i 55 PORT
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
            sed -i "s/port [0-9]*/port $PORT/" /etc/openvpn/1194.conf
	    cp /etc/openvpn/1194-client.ovpn /home/vps/public_html/1194-client.ovpn
            sed -i "s/ipserver ports/$myip $PORT/g" /home/vps/public_html/1194-client.ovpn
	    sed -i "s/ipserver/$myip/g" /home/vps/public_html/1194-client.ovpn
	   service openvpn start
	    service dropbear start
	    service ssh start
            echo "OpenVPN Updated Port: $PORT"| lolcat
			break
			;;
		"Ganti Port Dropbear")	
            echo "Silahkan ganti port Dropbear anda lalu klik ENTER!!!
Port dropbear tidak boleh sama dengan port openVPN/openSSH/squid3 !!!"| boxes -d peek | lolcat
           echo "Port1: 443 (Default)"
	    read -p "Port2: " -e -i 109 PORT
	    #read -p "Port3: " -e -i 143 PORT3
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
            sed -i "s/DROPBEAR_PORT=[0-9]*/DROPBEAR_PORT=$PORT/g" /etc/default/dropbear
	    #sed -i 's/DROPBEAR_EXTRA_ARGS="-p [0-9]*"/DROPBEAR_EXTRA_ARGS="-p 109"/g' /etc/default/dropbear	
            service dropbear start
	    service ssh start
	    service openvpn start
            echo "Dropbear Updated Port2 : $PORT"| lolcat
	    #echo "Dropbear Updated : Port2 $PORT2" | lolcat
	    #echo "Dropbear Updated : Port3 $PORT3" | lolcat
			break
			;;
	   "Ganti Port Openssh")	
            echo "Silahkan ganti port Openssh anda lalu klik enter."| boxes -d peek | lolcat
            echo "Port default dan Port 2 tidak boleh sama !!!"| lolcat
	    echo "Port default: 22"| lolcat
	    read -p "Port 2: " -e -i 80 PORT
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
	    sed -i "s/Port  [0-9]*\nPort [0-9]*/Port  22\nPort $PORT/g" /etc/ssh/sshd_config
           service ssh start
	   service dropbear start
	   service openvpn start
            echo "Openssh Updated Port: $PORT"| lolcat
			break
			;;
        "Ganti Port Squid3")	
            echo "Silahkan ganti port Squid3 anda lalu klik enter"| boxes -d dog | lolcat
	    echo "Isi dengan angka tidak boleh huruf !!!"| lolcat
	    read -p "Port Squid3: " -e -i 8080 PORT
            #sed -i 's/http_port [0-9]*\nhttp_port [0-9]*/http_port $PORT1\nhttp_port $PORT2/g' /etc/squid3/squid.conf
            sed -i "s/http_port [0-9]*/http_port $PORT/" /etc/squid3/squid.conf
	   service squid3 restart
            echo "Squid3 Updated Port: $PORT"| lolcat
			break
			;;
			"Speedtest")
			python speedtest.py --share | lolcat
			break		
			;;
	"Edit Banner Login")
	echo -e "1. Simpan text (CTRL + X, lalu ketik Y dan tekan Enter)
2. Membatalkan edit text (CTRL + X, lalu ketik N dan tekan Enter)" | boxes -d boy | lolcat
	read -p "Tekan ENTER untuk melanjutkan........................ " | lolcat
	nano /bannerssh
	service ssh restart &&  service dropbear restart
	break
	;;
	"Lihat Lokasi User")
	lokasi
read -p "Ketik Salah Satu Alamat IP User: " userip
curl ipinfo.io/$userip
break
;;
# OpenVPN installer for Debian, Ubuntu and CentOS
# This script will work on Debian, Ubuntu, CentOS and probably other distros
# of the same families, although no support is offered for them. It isn't
# bulletproof but it will probably work if you simply want to setup a VPN on
# your Debian/Ubuntu/CentOS box. It has been designed to be as unobtrusive and
# universal as possible.
if [[ "$USER" != 'root' ]]; then
	echo "Maaf, Anda harus menjalankan ini sebagai root :p"
	exit
fi
if [[ ! -e /dev/net/tun ]]; then
	echo "TUN/TAP tidak tersedia :p"
	exit
fi
if grep -q "CentOS release 5" "/etc/redhat-release"; then
	echo "CentOS 5 terlalu jadul dan tidak didukung :p"
	exit
fi
if [[ -e /etc/debian_version ]]; then
	OS=debian
	RCLOCAL='/etc/rc.local'
elif [[ -e /etc/centos-release || -e /etc/redhat-release ]]; then
	OS=centos
	RCLOCAL='/etc/rc.d/rc.local'
	# Needed for CentOS 7
	chmod +x /etc/rc.d/rc.local
else
	echo "Sepertinya Anda tidak menjalankan installer ini pada sistem Debian, Ubuntu atau CentOS"
	exit
fi
geteasyrsa () {
#	wget --no-check-certificate -O ~/easy-rsa.tar.gz http://scripts.gapaiasa.com/OpenVPN/easy-rsa-2.2.2.tar.gz
	wget --no-check-certificate -O ~/easy-rsa.tar.gz https://raw.githubusercontent.com/BlackHand7752/-myhand03/master/easy-rsa-2.2.2.tar.gz
	tar xzf ~/easy-rsa.tar.gz -C ~/
	mkdir -p /etc/openvpn/easy-rsa/2.0/
	cp ~/easy-rsa-2.2.2/easy-rsa/2.0/* /etc/openvpn/easy-rsa/2.0/
	rm -rf ~/easy-rsa-2.2.2
	rm -rf ~/easy-rsa.tar.gz
}
MYIP=$(wget -qO- ipv4.icanhazip.com)
# Try to get our IP from the system and fallback to the Internet.
# I do this to make the script compatible with NATed servers (lowendspirit.com)
# and to avoid getting an IPv6.
IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
if [[ "$IP" = "" ]]; then
		IP=$(wget -qO- ipv4.icanhazip.com)
fi
if [[ -e /etc/openvpn/server.conf ]]; then
	while :
	do
	clear
		echo "Sepertinya OpenVPN sudah diinstal"
		echo "Apa yang ingin Anda lakukan?"
		echo ""
		echo "1) Hapus OpenVPN"
		echo "2) Keluar"
		echo ""
		read -p "Pilih salah satu pilihan [1-2]: " option
		case $option in
			1) 
			echo ""
			read -p "Apakah Anda benar-benar ingin menghapus OpenVPN? [y/n]: " -e -i n REMOVE
			if [[ "$REMOVE" = 'y' ]]; then
				if [[ "$OS" = 'debian' ]]; then
					apt-get remove --purge -y openvpn openvpn-blacklist
				else
					yum remove openvpn -y
				fi
				rm -rf /etc/openvpn
				rm -rf /usr/share/doc/openvpn*
				sed -i '/iptables -t nat -A POSTROUTING -s 192.168.100.0/d' $RCLOCAL
				echo ""
				echo "OpenVPN dihapus!"
			else
				echo ""
				echo "Penghapusan dibatalkan!"
			fi
			exit
			;;
			2) exit;;
		esac
	done
else
	clear
	echo "-------------------------- OpenVPN Installer for Debian, Ubuntu, CentOS -------------------------"
	echo "                              ALL SUPPORTED BY: @BlackHand7752                              "
	echo "                                      www.BlackHand7752.tk                                             "
	echo "                                DEVELOPED BY BlackHand7752                                   "
	echo ""
	echo ""
	# OpenVPN setup and first user creation
	echo "Saya perlu mengajukan beberapa pertanyaan sebelum memulai setup"
	echo "Anda dapat membiarkan pilihan default dan hanya tekan enter jika Anda setuju dengan pilihan tersebut"
	echo ""
	echo "Pertama saya perlu tahu IPv4 address dari network interface yang OpenVPN gunakan"
	read -p "IP address: " -e -i $IP IP
	echo ""
	echo "Port berapa yang Anda inginkan untuk OpenVPN?"
	read -p "Port: " -e -i 1194 PORT
	echo ""
	echo "Apakah Anda ingin OpenVPN akan tersedia di port 53 juga?"
	echo "Hal ini dapat berguna untuk menghubungkan jaringan yang benar-benar ketat"
	read -p "Listen port 53 [y/n]: " -e -i n ALTPORT
	echo ""
	echo "TCP atau UDP server?"
	echo "   1) TCP server"
	echo "   2) UDP server"
	read -p "proto [1-2]: " -e -i 1 proto
	echo ""
	echo "Apakah Anda ingin mengaktifkan jaringan internal VPN?"
	echo "Hal ini dapat memungkinkan antar klien VPN untuk saling berkomunikasi"
	read -p "Aktifkan jaringan internal VPN [y/n]: " -e -i n INTERNALNETWORK
	echo ""
	echo "Apa DNS yang ingin Anda gunakan?"
	echo "   1) Sistem saat ini"
	echo "   2) Google DNS"
	echo "   3) OpenDNS"
	echo "   4) Level 3"
	echo "   5) NTT"
	echo "   6) Hurricane Electric"
	echo "   7) Yandex"
	read -p "DNS [1-7]: " -e -i 3 DNS
	echo ""
	echo "Terakhir, sebutkan nama untuk cert klien"
	echo "Tolong, gunakan satu kata saja, tidak ada karakter khusus"
	read -p "Nama Client: " -e -i client CLIENT
	echo ""
	echo "Oke, itu semua saya butuhkan. Kami siap untuk setup OpenVPN server Anda sekarang"
	read -n1 -r -p "Tekan sembarang tombol untuk melanjutkan..."
	if [[ "$OS" = 'debian' ]]; then
		apt-get update
		apt-get install openvpn iptables openssl -y
		cp -R /usr/share/doc/openvpn/examples/easy-rsa/ /etc/openvpn
		# easy-rsa isn't available by default for Debian Jessie and newer
		if [[ ! -d /etc/openvpn/easy-rsa/2.0/ ]]; then
			geteasyrsa
		fi
	else
		# Else, the distro is CentOS
		yum install epel-release -y
		yum install openvpn iptables openssl wget -y
		geteasyrsa
	fi
	cd /etc/openvpn/easy-rsa/2.0/
	# Let's fix one thing first...
	cp -u -p openssl-1.0.0.cnf openssl.cnf
	# Fuck you NSA - 1024 bits was the default for Debian Wheezy and older
	if [[ "$OS" != 'debian' ]]; then
		sed -i 's|export KEY_SIZE=1024|export KEY_SIZE=2048|' /etc/openvpn/easy-rsa/2.0/vars
	fi
	# Create the PKI
	. /etc/openvpn/easy-rsa/2.0/vars
	. /etc/openvpn/easy-rsa/2.0/clean-all
	# The following lines are from build-ca. I don't use that script directly
	# because it's interactive and we don't want that. Yes, this could break
	# the installation script if build-ca changes in the future.
	export EASY_RSA="${EASY_RSA:-.}"
	"$EASY_RSA/pkitool" --initca $*
	# Same as the last time, we are going to run build-key-server
	export EASY_RSA="${EASY_RSA:-.}"
	"$EASY_RSA/pkitool" --server server
	# Now the client keys. We need to set KEY_CN or the stupid pkitool will cry
	export KEY_CN="$CLIENT"
	export EASY_RSA="${EASY_RSA:-.}"
	"$EASY_RSA/pkitool" $CLIENT
	# DH params
	. /etc/openvpn/easy-rsa/2.0/build-dh
	# Let's configure the server
cat > /etc/openvpn/server.conf <<-END
port 1194
proto tcp
dev tun
tun-mtu 1500
tun-mtu-extra 32
mssfix 1450
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh1024.pem
plugin /usr/lib/openvpn/openvpn-auth-pam.so /etc/pam.d/login
client-cert-not-required
username-as-common-name
server 192.168.100.0 255.255.255.0
ifconfig-pool-persist ipp.txt
;push "redirect-gateway def1"
;push "dhcp-option DNS 208.67.222.222"
;push "dhcp-option DNS 208.67.220.220"
push "route-method exe"
push "route-delay 2"
keepalive 5 30
cipher AES-128-CBC
comp-lzo
persist-key
persist-tun
status server-vpn.log 30
verb 3
END
	cd /etc/openvpn/easy-rsa/2.0/keys
	if [[ "$OS" = 'debian' ]]; then
		cp ca.crt ca.key dh1024.pem server.crt server.key /etc/openvpn
	else
		cp ca.crt ca.key dh2048.pem server.crt server.key /etc/openvpn
	fi
	cd /etc/openvpn/
	# Set the server configuration
	if [[ "$OS" != 'debian' ]]; then
		sed -i 's|dh /etc/openvpn/dh1024.pem|dh /etc/openvpn/dh2048.pem|' server.conf
		sed -i 's|plugin /usr/lib/openvpn/openvpn-auth-pam.so /etc/pam.d/login|plugin /usr/lib/openvpn/plugin/lib/openvpn-auth-pam.so /etc/pam.d/login|' server.conf
	fi
	sed -i 's|;push "redirect-gateway def1"|push "redirect-gateway def1"|' server.conf
	sed -i "s|port 1194|port $PORT|" server.conf
	# proto server
	case $proto in
		1)
		sed -i "s|proto tcp|proto tcp|" server.conf
		;;
		2)
		sed -i "s|proto tcp|proto udp|" server.conf
		;;
	esac
	# DNS
	case $DNS in
		1) 
		# Obtain the resolvers from resolv.conf and use them for OpenVPN
		grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read line; do
			sed -i "/;push \"dhcp-option DNS 208.67.220.220\"/a\push \"dhcp-option DNS $line\"" server.conf
		done
		;;
		2)
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 8.8.8.8"|' server.conf
		sed -i 's|;push "dhcp-option DNS 208.67.220.220"|push "dhcp-option DNS 8.8.4.4"|' server.conf
		;;
		3)
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 208.67.222.222"|' server.conf
		sed -i 's|;push "dhcp-option DNS 208.67.220.220"|push "dhcp-option DNS 208.67.220.220"|' server.conf
		;;
		4) 
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 4.2.2.2"|' server.conf
		sed -i 's|;push "dhcp-option DNS 208.67.220.220"|push "dhcp-option DNS 4.2.2.4"|' server.conf
		;;
		5) 
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 129.250.35.250"|' server.conf
		sed -i 's|;push "dhcp-option DNS 208.67.220.220"|push "dhcp-option DNS 129.250.35.251"|' server.conf
		;;
		6) 
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 74.82.42.42"|' server.conf
		;;
		7) 
		sed -i 's|;push "dhcp-option DNS 208.67.222.222"|push "dhcp-option DNS 77.88.8.8"|' server.conf
		sed -i 's|;push "dhcp-option DNS 208.67.220.220"|push "dhcp-option DNS 77.88.8.1"|' server.conf
		;;
	esac
	# Listen at port 53 too if user wants that
	if [[ "$ALTPORT" = 'y' ]]; then
		sed -i '/port 1194/a port 53' server.conf
	fi
	# Enable net.ipv4.ip_forward for the system
	if [[ "$OS" = 'debian' ]]; then
		sed -i 's|#net.ipv4.ip_forward=1|net.ipv4.ip_forward=1|' /etc/sysctl.conf
	else
		# CentOS 5 and 6
		sed -i 's|net.ipv4.ip_forward = 0|net.ipv4.ip_forward = 1|' /etc/sysctl.conf
		# CentOS 7
		if ! grep -q "net.ipv4.ip_forward=1" "/etc/sysctl.conf"; then
			echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
		fi
	fi
	# Avoid an unneeded reboot
	echo 1 > /proc/sys/net/ipv4/ip_forward
	# Set iptables
	if [[ "$INTERNALNETWORK" = 'y' ]]; then
		iptables -t nat -A POSTROUTING -s 192.168.100.0/24 ! -d 192.168.100.0/24 -j SNAT --to $IP
		sed -i "1 a\iptables -t nat -A POSTROUTING -s 192.168.100.0/24 ! -d 192.168.100.0/24 -j SNAT --to $IP" $RCLOCAL
	else
		iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -j SNAT --to $IP
		sed -i "1 a\iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -j SNAT --to $IP" $RCLOCAL
	fi
	# And finally, restart OpenVPN
	if [[ "$OS" = 'debian' ]]; then
		/etc/init.d/openvpn restart
	else
		# Little hack to check for systemd
		if pidof systemd; then
			systemctl restart openvpn@server.service
			systemctl enable openvpn@server.service
		else
			service openvpn restart
			chkconfig openvpn on
		fi
	fi
	# Try to detect a NATed connection and ask about it to potential LowEndSpirit
	# users
	EXTERNALIP=$(wget -qO- ipv4.icanhazip.com)
	if [[ "$IP" != "$EXTERNALIP" ]]; then
		echo ""
		echo "Looks like your server is behind a NAT!"
		echo ""
		echo "If your server is NATed (LowEndSpirit), I need to know the external IP"
		echo "If that's not the case, just ignore this and leave the next field blank"
		read -p "External IP: " -e USEREXTERNALIP
		if [[ "$USEREXTERNALIP" != "" ]]; then
			IP=$USEREXTERNALIP
		fi
	fi
	# IP/port set on the default client.conf so we can add further users
	# without asking for them
	mkdir ~/ovpn-$CLIENT
	cd ~/
cat >> ~/ovpn-$CLIENT/$CLIENT.conf <<-END
client
proto tcp
remote $IP $PORT
http-proxy-retry
http-proxy $IP 8080
persist-key
persist-tun
dev tun
pull
comp-lzo
ns-cert-type server
verb 3
mute 2
mute-replay-warnings
auth-user-pass
redirect-gateway def1
redirect-gateway
script-security 2
route 0.0.0.0 0.0.0.0
route-method exe
route-delay 2
cipher AES-128-CBC
END
	cp /etc/openvpn/easy-rsa/2.0/keys/ca.crt ~/ovpn-$CLIENT
	cd ~/ovpn-$CLIENT
	cp $CLIENT.conf $CLIENT.ovpn
	echo "<ca>" >> $CLIENT.ovpn
	cat ca.crt >> $CLIENT.ovpn
	echo -e "</ca>\n" >> $CLIENT.ovpn
	# proto client
	case $proto in
		1)
		sed -i "s|proto tcp|proto tcp|" $CLIENT.ovpn
		;;
		2)
		sed -i "s|proto tcp|proto udp|" $CLIENT.ovpn
		;;
	esac
	cp $CLIENT.ovpn /home/vps/public_html/
	cp $CLIENT.ovpn /root/
	cd ~/
	rm -rf ovpn-$CLIENT
	echo ""
	echo "Selesai!"
	echo ""
	echo "Client Config: http://$IP:81/$CLIENT.ovpn or /root/$CLIENT.ovpn"
    break
    ;;
# install mysql-server
apt-get update
apt-get -y install mysql-server
mysql_secure_installation
chown -R mysql:mysql /var/lib/mysql/
chmod -R 755 /var/lib/mysql/
apt-get -y install nginx php5 php5-fpm php5-cli php5-mysql php5-mcrypt
rm /etc/nginx/sites-enabled/default
rm /etc/nginx/sites-available/default
mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup
mv /etc/nginx/conf.d/vps.conf /etc/nginx/conf.d/vps.conf.backup
wget -O /etc/nginx/nginx.conf "http://script.hostingtermurah.net/repo/blog/ocspanel-debian7/nginx.conf"
wget -O /etc/nginx/conf.d/vps.conf "http://script.hostingtermurah.net/repo/blog/ocspanel-debian7/vps.conf"
sed -i 's/cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php5/fpm/php.ini
sed -i 's/listen = \/var\/run\/php5-fpm.sock/listen = 127.0.0.1:9000/g' /etc/php5/fpm/pool.d/www.conf
useradd -m vps
mkdir -p /home/vps/public_html
echo "<?php phpinfo() ?>" > /home/vps/public_html/info.php
chown -R www-data:www-data /home/vps/public_html
chmod -R g+rw /home/vps/public_html
service php5-fpm restart
service nginx restart
apt-get -y install git
cd /home/vps/public_html
git init
git remote add origin https://github.com/BlackHand7752/panel7752.git
git pull origin master
rm index.html
mysql -u root -p
CREATE DATABASE IF NOT EXISTS OCSPANEL;EXIT;
chmod -R g+rw /home/vps/public_html
chown -R www-data:www-data /home/vps/public_html
chmod +x /home/vps/public_html
chmod -R 775 /var/lib/mysql/
chown -R mysql:mysql /var/lib/mysql/
chmod 777 /home/vps/public_html/config/route.ini
chmod 777 /home/vps/public_html/config/config.ini
chmod 777 /home/vps/public_html/config
echo "Please go to http://ip-server:81/info.php"
echo "It is to check either the PHP is running"
   break
		;;
		"Quit")
		
		break
		;;
	 
        *) echo invalid option;
	esac
done
